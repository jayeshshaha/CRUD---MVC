using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization.Infrastructure;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using StudentManage.Models;

namespace StudentManage.Controllers
{
    
    public class StudentController : Controller
    {
       
        public IActionResult ListStudents()
        {
            MyDBContext ctx = new MyDBContext();
            List<StudentModel> li = ctx.StudentTable.ToList();
            return View(li);
        }

        public IActionResult AddStudent()
        {  
            return View();
        }
        
        [HttpPost]
        public IActionResult AddStudent(StudentModel model)
        {  
            MyDBContext ctx = new MyDBContext();
            ctx.StudentTable.Add(model);
            ctx.SaveChanges();
            return RedirectToAction("ListStudents");
        }

        public IActionResult Edit(int Id)
        {  
            MyDBContext ctx = new MyDBContext();
            var student = ctx.StudentTable.Find(Id);
            if(student == null){
                return NotFound();
            }
            StudentModel studentModel = new StudentModel{
                Id = student.Id,
                Name = student.Name,
                Age = student.Age

            };
            return View(studentModel);
        }

        [HttpPost]
         public IActionResult Edit(StudentModel model)
        {  
            MyDBContext ctx = new MyDBContext();
            var student = ctx.StudentTable.Find(model.Id);
            if (student == null){
                return NotFound();
            }
            student.Name = model.Name;
            student.Age = model.Age;
            ctx.SaveChanges();
            return RedirectToAction("ListStudents");
        }

        public IActionResult Delete(int Id){
             MyDBContext ctx = new MyDBContext();
             var student = ctx.StudentTable.Find(Id);
             if(student == null){
                return NotFound();
             }
             StudentModel studentModel = new StudentModel{
                  Id = student.Id,
                  Name = student.Name,
                  Age = student.Age
             };
             return View(studentModel);
        }

         public IActionResult DeleteConfirmed(int Id){
            MyDBContext ctx = new MyDBContext();
            var student = ctx.StudentTable.Find(Id);
            if(student == null){
                return NotFound();
            }
            ctx.StudentTable.Remove(student);
            ctx.SaveChanges();
            return RedirectToAction("ListStudents");
            
         }
        
    }
}
